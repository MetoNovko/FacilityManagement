<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A new component was successfully added" xml:space="preserve">
    <value>Успешно е додадена нова компонента</value>
  </data>
  <data name="A new system was successfully added" xml:space="preserve">
    <value>Успешно е додаден нов систем</value>
  </data>
  <data name="A new type was successfully added" xml:space="preserve">
    <value>Успешно е додаден нов тип</value>
  </data>
  <data name="Add component" xml:space="preserve">
    <value>Додади компонента</value>
  </data>
  <data name="Add system" xml:space="preserve">
    <value>Додади систем</value>
  </data>
  <data name="Add type" xml:space="preserve">
    <value>Додади тип</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Сите</value>
  </data>
  <data name="All rights reserved" xml:space="preserve">
    <value>Сите права задржани</value>
  </data>
  <data name="Are you sure?" xml:space="preserve">
    <value>Дали сте сигурни?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Откажи</value>
  </data>
  <data name="Category:" xml:space="preserve">
    <value>Категорија:</value>
  </data>
  <data name="Chillers" xml:space="preserve">
    <value>Чилери</value>
  </data>
  <data name="Climate chambers" xml:space="preserve">
    <value>Клима комори</value>
  </data>
  <data name="Compressors" xml:space="preserve">
    <value>Компресори</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Избриши</value>
  </data>
  <data name="Delete system" xml:space="preserve">
    <value>Избриши систем</value>
  </data>
  <data name="Delete type" xml:space="preserve">
    <value>Избриши тип</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Опис</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Детали</value>
  </data>
  <data name="Edit component" xml:space="preserve">
    <value>Измени компонента</value>
  </data>
  <data name="Edit system" xml:space="preserve">
    <value>Измени систем</value>
  </data>
  <data name="Edit type" xml:space="preserve">
    <value>Измени тип</value>
  </data>
  <data name="Edit unit" xml:space="preserve">
    <value>Измени единица</value>
  </data>
  <data name="Error occured" xml:space="preserve">
    <value>Настана грешка</value>
  </data>
  <data name="Everything about the unit in one place" xml:space="preserve">
    <value>Се за единицата на едно место</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Почетна</value>
  </data>
  <data name="Inventory" xml:space="preserve">
    <value>Инвентар</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Се вчитува</value>
  </data>
  <data name="Log out" xml:space="preserve">
    <value>Одјави се</value>
  </data>
  <data name="Make an inspection" xml:space="preserve">
    <value>Изврши контрола</value>
  </data>
  <data name="Manufacturer" xml:space="preserve">
    <value>Производител</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Модел</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Име</value>
  </data>
  <data name="Navigational Menu" xml:space="preserve">
    <value>Навигациско Мени</value>
  </data>
  <data name="Open Menu" xml:space="preserve">
    <value>Отвори Мени</value>
  </data>
  <data name="Please enter a valid number." xml:space="preserve">
    <value>Ве молиме внесете валидна целобројна вредност.</value>
  </data>
  <data name="Please refresh the page!" xml:space="preserve">
    <value>Ве молиме освежете ја страницата!</value>
  </data>
  <data name="Preview of all units in the inventory" xml:space="preserve">
    <value>Преглед на сите единици во инвентарот</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Профил</value>
  </data>
  <data name="Short information" xml:space="preserve">
    <value>Кратка информација</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Внеси</value>
  </data>
  <data name="Successful operation" xml:space="preserve">
    <value>Успешна операција</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>Систем</value>
  </data>
  <data name="The component was successfully deleted" xml:space="preserve">
    <value>Успешно ја избришавте компонентата</value>
  </data>
  <data name="The component was successfully updated" xml:space="preserve">
    <value>Компонентата е успешно ажурирана</value>
  </data>
  <data name="The system was successfully deleted" xml:space="preserve">
    <value>Успешно го избришавте системот</value>
  </data>
  <data name="The system was successfully updated" xml:space="preserve">
    <value>Системот е успешно ажуриран</value>
  </data>
  <data name="The type was successfully deleted" xml:space="preserve">
    <value>Успешно го избришавте типот</value>
  </data>
  <data name="The type was successfully updated" xml:space="preserve">
    <value>Типот е успешно ажуриран</value>
  </data>
  <data name="The unit was successfully updated" xml:space="preserve">
    <value>Единицата е успешно ажурирана</value>
  </data>
  <data name="This field is required." xml:space="preserve">
    <value>Ова поле е задолжително.</value>
  </data>
  <data name="This field must be at least {2} characters long." xml:space="preserve">
    <value>Ова поле мора да биде најмалку {2} карактери долго.</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Верзија</value>
  </data>
  <data name="Working Hours" xml:space="preserve">
    <value>Работни часови</value>
  </data>
  <data name="You have successfully deleted the unit" xml:space="preserve">
    <value>Успешно ја избришавте единицата</value>
  </data>
</root>