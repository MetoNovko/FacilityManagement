// <auto-generated />
using FacilityManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacilityManagement.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191002135541_FunctionalPart")]
    partial class FunctionalPart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObject", b =>
                {
                    b.Property<int>("InventoryObjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<int>("WorkingHours");

                    b.HasKey("InventoryObjectId");

                    b.ToTable("InventoryObjects");
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectPart", b =>
                {
                    b.Property<int>("InventoryObjectPartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Functional");

                    b.Property<int>("InventoryObjectSystemId");

                    b.Property<string>("Name");

                    b.HasKey("InventoryObjectPartId");

                    b.HasIndex("InventoryObjectSystemId");

                    b.ToTable("InventoryObjectParts");
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectSystem", b =>
                {
                    b.Property<int>("InventoryObjectSystemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryObjectTypeId");

                    b.Property<string>("Name");

                    b.HasKey("InventoryObjectSystemId");

                    b.HasIndex("InventoryObjectTypeId");

                    b.ToTable("InventoryObjectSystems");
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectType", b =>
                {
                    b.Property<int>("InventoryObjectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryObjectId");

                    b.Property<string>("Name");

                    b.HasKey("InventoryObjectTypeId");

                    b.HasIndex("InventoryObjectId");

                    b.ToTable("InventoryObjectTypes");
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectPart", b =>
                {
                    b.HasOne("FacilityManagement.API.Models.InventoryObjectSystem", "Systems")
                        .WithMany("Parts")
                        .HasForeignKey("InventoryObjectSystemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectSystem", b =>
                {
                    b.HasOne("FacilityManagement.API.Models.InventoryObjectType", "Type")
                        .WithMany("Systems")
                        .HasForeignKey("InventoryObjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FacilityManagement.API.Models.InventoryObjectType", b =>
                {
                    b.HasOne("FacilityManagement.API.Models.InventoryObject", "InventoryObject")
                        .WithMany("Types")
                        .HasForeignKey("InventoryObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
